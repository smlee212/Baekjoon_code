// DFS와는 다르게 재귀함수를 사용하지 않는다.

bool visited[9];
vector<int> graph[9]; // 2차원 벡터

void bfs(int start) {
  queue<int> q;
  q.push(start);
  visited[start] = true;

  while(!q.empty()) {
    int x = q.front();
    q.pop();
    cout << x << ' ';
    for(int i = 0; i < graph[x].size(); i++) {
      int y = graph[x][i];
      if(!visited[y]) {
        q.push(y);
        visited[y] = true;
      }
    }
  }
}